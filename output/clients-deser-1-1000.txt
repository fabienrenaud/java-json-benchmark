# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4966748905107 as seed for Random
97.471 ops/s
Iteration   1: 141.313 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  141.313 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 6.67% complete, ETA 00:03:06
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4980035247255 as seed for Random
70.612 ops/s
Iteration   1: 123.448 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  123.448 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 13.33% complete, ETA 00:02:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=4993404020020 as seed for Random
487.801 ops/s
Iteration   1: 656.883 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  656.883 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:02:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5006504936009 as seed for Random
382.252 ops/s
Iteration   1: 505.277 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  505.277 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 26.67% complete, ETA 00:02:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5019631483412 as seed for Random
42.065 ops/s
Iteration   1: 88.785 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  88.785 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 33.33% complete, ETA 00:02:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5033272057548 as seed for Random
17.713 ops/s
Iteration   1: 30.971 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  30.971 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 40.00% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5048021653827 as seed for Random
74.573 ops/s
Iteration   1: 122.646 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  122.646 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 46.67% complete, ETA 00:01:48
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5061402742085 as seed for Random
17.388 ops/s
Iteration   1: 106.003 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  106.003 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 53.33% complete, ETA 00:01:35
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5075873406158 as seed for Random
48.235 ops/s
Iteration   1: 72.663 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  72.663 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 60.00% complete, ETA 00:01:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5089458519173 as seed for Random
65.339 ops/s
Iteration   1: 106.401 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  106.401 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 66.67% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5102900202729 as seed for Random
54.245 ops/s
Iteration   1: 104.182 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  104.182 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 73.33% complete, ETA 00:00:54
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5116353039168 as seed for Random
46.307 ops/s
Iteration   1: 91.268 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  91.268 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsoniter

# Run progress: 80.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5129859273504 as seed for Random
125.906 ops/s
Iteration   1: 148.229 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsoniter":
  148.229 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 86.67% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5143185605731 as seed for Random
43.454 ops/s
Iteration   1: 110.829 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  110.829 ops/s


# JMH version: 1.33
# VM version: JDK 1.8.0_345, OpenJDK 64-Bit Server VM, 25.345-b01
# VM invoker: /usr/lib/jvm/temurin-8-jdk-amd64/jre/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 93.33% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=5156748765086 as seed for Random
55.120 ops/s
Iteration   1: 102.022 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  102.022 ops/s


# Run complete. Total time: 00:03:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt    Score   Error  Units
Deserialization.avajejsonb           thrpt       141.313          ops/s
Deserialization.avajejsonb_jackson   thrpt       123.448          ops/s
Deserialization.dsljson              thrpt       656.883          ops/s
Deserialization.dsljson_reflection   thrpt       505.277          ops/s
Deserialization.fastjson             thrpt        88.785          ops/s
Deserialization.flexjson             thrpt        30.971          ops/s
Deserialization.genson               thrpt       122.646          ops/s
Deserialization.gson                 thrpt       106.003          ops/s
Deserialization.jackson              thrpt        72.663          ops/s
Deserialization.jackson_afterburner  thrpt       106.401          ops/s
Deserialization.jackson_blackbird    thrpt       104.182          ops/s
Deserialization.jodd                 thrpt        91.268          ops/s
Deserialization.jsoniter             thrpt       148.229          ops/s
Deserialization.logansquare          thrpt       110.829          ops/s
Deserialization.moshi                thrpt       102.022          ops/s
