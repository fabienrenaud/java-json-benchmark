# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3667045893942 as seed for Random
294137.861 ops/s
Iteration   1: 486049.902 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb":
  486049.902 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson

# Run progress: 6.67% complete, ETA 00:03:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3680131447739 as seed for Random
160572.267 ops/s
Iteration   1: 251644.448 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.avajejsonb_jackson":
  251644.448 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson

# Run progress: 13.33% complete, ETA 00:02:50
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3693253774127 as seed for Random
720819.710 ops/s
Iteration   1: 970737.993 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson":
  970737.993 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:02:37
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3706315953466 as seed for Random
392526.734 ops/s
Iteration   1: 449932.781 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection":
  449932.781 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.fastjson

# Run progress: 26.67% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3719419814263 as seed for Random
191578.017 ops/s
Iteration   1: 444243.208 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.fastjson":
  444243.208 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.flexjson

# Run progress: 33.33% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3732569889527 as seed for Random
2256.680 ops/s
Iteration   1: 1477.600 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.flexjson":
  1477.600 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.genson

# Run progress: 40.00% complete, ETA 00:01:58
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3745678717095 as seed for Random
202127.953 ops/s
Iteration   1: 252392.309 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.genson":
  252392.309 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.gson

# Run progress: 46.67% complete, ETA 00:01:44
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3758773532510 as seed for Random
151769.443 ops/s
Iteration   1: 202557.244 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.gson":
  202557.244 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson

# Run progress: 53.33% complete, ETA 00:01:31
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3771858594373 as seed for Random
291381.042 ops/s
Iteration   1: 518639.126 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson":
  518639.126 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner

# Run progress: 60.00% complete, ETA 00:01:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3784960603313 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/runner/work/java-json-benchmark/java-json-benchmark/build/libs/app.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
247482.974 ops/s
Iteration   1: 411504.700 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner":
  411504.700 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird

# Run progress: 66.67% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3798003106962 as seed for Random
386602.421 ops/s
Iteration   1: 494148.122 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jackson_blackbird":
  494148.122 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jodd

# Run progress: 73.33% complete, ETA 00:00:52
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3811042982785 as seed for Random
87372.768 ops/s
Iteration   1: 151398.909 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jodd":
  151398.909 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.jsoniter

# Run progress: 80.00% complete, ETA 00:00:39
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3824069437140 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.util.proxy.SecurityActions (file:/home/runner/work/java-json-benchmark/java-json-benchmark/build/libs/app.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.util.proxy.SecurityActions
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
517686.957 ops/s
Iteration   1: 651534.355 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.jsoniter":
  651534.355 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.logansquare

# Run progress: 86.67% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3837113994521 as seed for Random
208004.809 ops/s
Iteration   1: 531336.884 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.logansquare":
  531336.884 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Serialization.moshi

# Run progress: 93.33% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=3850192903095 as seed for Random
137246.346 ops/s
Iteration   1: 223845.562 ops/s


Result "com.github.fabienrenaud.jjb.databind.Serialization.moshi":
  223845.562 ops/s


# Run complete. Total time: 00:03:16

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt       Score   Error  Units
Serialization.avajejsonb           thrpt       486049.902          ops/s
Serialization.avajejsonb_jackson   thrpt       251644.448          ops/s
Serialization.dsljson              thrpt       970737.993          ops/s
Serialization.dsljson_reflection   thrpt       449932.781          ops/s
Serialization.fastjson             thrpt       444243.208          ops/s
Serialization.flexjson             thrpt         1477.600          ops/s
Serialization.genson               thrpt       252392.309          ops/s
Serialization.gson                 thrpt       202557.244          ops/s
Serialization.jackson              thrpt       518639.126          ops/s
Serialization.jackson_afterburner  thrpt       411504.700          ops/s
Serialization.jackson_blackbird    thrpt       494148.122          ops/s
Serialization.jodd                 thrpt       151398.909          ops/s
Serialization.jsoniter             thrpt       651534.355          ops/s
Serialization.logansquare          thrpt       531336.884          ops/s
Serialization.moshi                thrpt       223845.562          ops/s
