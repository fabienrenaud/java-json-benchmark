# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb

# Run progress: 0.00% complete, ETA 00:06:36
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=529993268425 as seed for Random
294576.367 ops/s
Iteration   1: 459163.113 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb":
  459163.113 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson

# Run progress: 3.03% complete, ETA 00:07:06
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=543265131870 as seed for Random
146597.109 ops/s
Iteration   1: 244401.207 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.avajejsonb_jackson":
  244401.207 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.boon

# Run progress: 6.06% complete, ETA 00:06:53
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=556615781226 as seed for Random
<failure>

java.lang.ExceptionInInitializerError
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.ClassCastException: class [B cannot be cast to class [C ([B and [C are in module java.base of loader 'bootstrap')
	at org.boon.core.reflection.FastStringUtils$StringImplementation$1.toCharArray(FastStringUtils.java:92)
	at org.boon.core.reflection.FastStringUtils.toCharArray(FastStringUtils.java:175)
	at org.boon.primitive.Chr.chars(Chr.java:70)
	at org.boon.json.implementation.JsonParserCharArray.<clinit>(JsonParserCharArray.java:275)
	... 17 more

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_thrpt_jmhStub(Deserialization_boon_jmhTest.java:119)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)

java.lang.NoClassDefFoundError: Could not initialize class org.boon.json.implementation.JsonParserLax
	at org.boon.json.JsonMappingParser.<init>(JsonMappingParser.java:85)
	at org.boon.json.JsonParserFactory.create(JsonParserFactory.java:228)
	at org.boon.json.implementation.ObjectMapperImpl.readValue(ObjectMapperImpl.java:78)
	at com.github.fabienrenaud.jjb.databind.Deserialization.boon(Deserialization.java:73)
	at com.github.fabienrenaud.jjb.databind.jmh_generated.Deserialization_boon_jmhTest.boon_Throughput(Deserialization_boon_jmhTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)




# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson

# Run progress: 9.09% complete, ETA 00:04:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=557836962796 as seed for Random
324845.501 ops/s
Iteration   1: 507154.626 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson":
  507154.626 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection

# Run progress: 12.12% complete, ETA 00:04:59
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=571210645223 as seed for Random
368803.256 ops/s
Iteration   1: 461716.761 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection":
  461716.761 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.fastjson

# Run progress: 15.15% complete, ETA 00:05:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=584524939788 as seed for Random
42430.576 ops/s
Iteration   1: 153718.263 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.fastjson":
  153718.263 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.flexjson

# Run progress: 18.18% complete, ETA 00:05:05
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=597794446693 as seed for Random
13345.256 ops/s
Iteration   1: 37973.542 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.flexjson":
  37973.542 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.genson

# Run progress: 21.21% complete, ETA 00:05:01
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=611179083824 as seed for Random
150369.563 ops/s
Iteration   1: 186668.232 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.genson":
  186668.232 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.gson

# Run progress: 24.24% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=624431359667 as seed for Random
101592.907 ops/s
Iteration   1: 187553.344 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.gson":
  187553.344 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson

# Run progress: 27.27% complete, ETA 00:04:47
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=637714860259 as seed for Random
167276.062 ops/s
Iteration   1: 276971.289 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson":
  276971.289 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner

# Run progress: 30.30% complete, ETA 00:04:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=651042839988 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/runner/work/java-json-benchmark/java-json-benchmark/build/libs/app.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
263353.672 ops/s
Iteration   1: 350567.188 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner":
  350567.188 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird

# Run progress: 33.33% complete, ETA 00:04:28
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=664334940964 as seed for Random
220593.846 ops/s
Iteration   1: 346416.837 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jackson_blackbird":
  346416.837 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jodd

# Run progress: 36.36% complete, ETA 00:04:18
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=677664868508 as seed for Random
95311.268 ops/s
Iteration   1: 134548.848 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jodd":
  134548.848 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.johnzon

# Run progress: 39.39% complete, ETA 00:04:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=691008103733 as seed for Random
28314.292 ops/s
Iteration   1: 55740.907 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.johnzon":
  55740.907 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsoniter

# Run progress: 42.42% complete, ETA 00:03:56
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=704265006773 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by javassist.util.proxy.SecurityActions (file:/home/runner/work/java-json-benchmark/java-json-benchmark/build/libs/app.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of javassist.util.proxy.SecurityActions
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
258709.536 ops/s
Iteration   1: 416830.302 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsoniter":
  416830.302 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart

# Run progress: 45.45% complete, ETA 00:03:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=717566956277 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.minidev.asm.DynamicClassLoader (file:/home/runner/work/java-json-benchmark/java-json-benchmark/build/libs/app.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of net.minidev.asm.DynamicClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
151620.825 ops/s
Iteration   1: 228545.761 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart":
  228545.761 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.logansquare

# Run progress: 48.48% complete, ETA 00:03:33
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=730830263782 as seed for Random
104409.853 ops/s
Iteration   1: 157757.663 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.logansquare":
  157757.663 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.moshi

# Run progress: 51.52% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=744371188087 as seed for Random
145140.282 ops/s
Iteration   1: 168446.039 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.moshi":
  168446.039 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.databind.Deserialization.yasson

# Run progress: 54.55% complete, ETA 00:03:09
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=757671599073 as seed for Random
19471.649 ops/s
Iteration   1: 43517.229 ops/s


Result "com.github.fabienrenaud.jjb.databind.Deserialization.yasson":
  43517.229 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.genson

# Run progress: 57.58% complete, ETA 00:02:57
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=770944147712 as seed for Random
131122.515 ops/s
Iteration   1: 202143.491 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.genson":
  202143.491 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.gson

# Run progress: 60.61% complete, ETA 00:02:45
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=784177533072 as seed for Random
65447.141 ops/s
Iteration   1: 157025.789 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.gson":
  157025.789 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jackson

# Run progress: 63.64% complete, ETA 00:02:32
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=797538740588 as seed for Random
205588.112 ops/s
Iteration   1: 297666.187 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jackson":
  297666.187 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson

# Run progress: 66.67% complete, ETA 00:02:20
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=810847615015 as seed for Random
14783.628 ops/s
Iteration   1: 24045.673 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson":
  24045.673 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonio

# Run progress: 69.70% complete, ETA 00:02:07
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=824076840900 as seed for Random
32827.070 ops/s
Iteration   1: 63055.564 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonio":
  63055.564 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple

# Run progress: 72.73% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=837421682802 as seed for Random
38360.550 ops/s
Iteration   1: 68347.640 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple":
  68347.640 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson

# Run progress: 75.76% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=850753640628 as seed for Random
12327.564 ops/s
Iteration   1: 12860.215 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson":
  12860.215 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.mjson

# Run progress: 78.79% complete, ETA 00:01:29
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=864035147290 as seed for Random
75757.377 ops/s
Iteration   1: 116575.042 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.mjson":
  116575.042 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.moshi

# Run progress: 81.82% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=877319199832 as seed for Random
66066.470 ops/s
Iteration   1: 124739.937 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.moshi":
  124739.937 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.nanojson

# Run progress: 84.85% complete, ETA 00:01:04
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=890530217228 as seed for Random
53339.373 ops/s
Iteration   1: 70288.407 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.nanojson":
  70288.407 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.orgjson

# Run progress: 87.88% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=903905445405 as seed for Random
64301.054 ops/s
Iteration   1: 122757.657 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.orgjson":
  122757.657 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.purejson

# Run progress: 90.91% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=917105616820 as seed for Random
47851.248 ops/s
Iteration   1: 80420.513 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.purejson":
  80420.513 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.tapestry

# Run progress: 93.94% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=930375282333 as seed for Random
109715.054 ops/s
Iteration   1: 208052.838 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.tapestry":
  208052.838 ops/s


# JMH version: 1.33
# VM version: JDK 11.0.16.1, OpenJDK 64-Bit Server VM, 11.0.16.1+1
# VM invoker: /usr/lib/jvm/temurin-11-jdk-amd64/bin/java
# VM options: -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java

# Run progress: 96.97% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: Using SEED=943639216302 as seed for Random
48652.990 ops/s
Iteration   1: 162940.009 ops/s


Result "com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java":
  162940.009 ops/s


# Run complete. Total time: 00:07:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                              Mode  Cnt       Score   Error  Units
c.g.f.j.databind.Deserialization.avajejsonb           thrpt       459163.113          ops/s
c.g.f.j.databind.Deserialization.avajejsonb_jackson   thrpt       244401.207          ops/s
c.g.f.j.databind.Deserialization.dsljson              thrpt       507154.626          ops/s
c.g.f.j.databind.Deserialization.dsljson_reflection   thrpt       461716.761          ops/s
c.g.f.j.databind.Deserialization.fastjson             thrpt       153718.263          ops/s
c.g.f.j.databind.Deserialization.flexjson             thrpt        37973.542          ops/s
c.g.f.j.databind.Deserialization.genson               thrpt       186668.232          ops/s
c.g.f.j.databind.Deserialization.gson                 thrpt       187553.344          ops/s
c.g.f.j.databind.Deserialization.jackson              thrpt       276971.289          ops/s
c.g.f.j.databind.Deserialization.jackson_afterburner  thrpt       350567.188          ops/s
c.g.f.j.databind.Deserialization.jackson_blackbird    thrpt       346416.837          ops/s
c.g.f.j.databind.Deserialization.jodd                 thrpt       134548.848          ops/s
c.g.f.j.databind.Deserialization.johnzon              thrpt        55740.907          ops/s
c.g.f.j.databind.Deserialization.jsoniter             thrpt       416830.302          ops/s
c.g.f.j.databind.Deserialization.jsonsmart            thrpt       228545.761          ops/s
c.g.f.j.databind.Deserialization.logansquare          thrpt       157757.663          ops/s
c.g.f.j.databind.Deserialization.moshi                thrpt       168446.039          ops/s
c.g.f.j.databind.Deserialization.yasson               thrpt        43517.229          ops/s
c.g.f.j.stream.Deserialization.genson                 thrpt       202143.491          ops/s
c.g.f.j.stream.Deserialization.gson                   thrpt       157025.789          ops/s
c.g.f.j.stream.Deserialization.jackson                thrpt       297666.187          ops/s
c.g.f.j.stream.Deserialization.javaxjson              thrpt        24045.673          ops/s
c.g.f.j.stream.Deserialization.jsonio                 thrpt        63055.564          ops/s
c.g.f.j.stream.Deserialization.jsonsimple             thrpt        68347.640          ops/s
c.g.f.j.stream.Deserialization.minimaljson            thrpt        12860.215          ops/s
c.g.f.j.stream.Deserialization.mjson                  thrpt       116575.042          ops/s
c.g.f.j.stream.Deserialization.moshi                  thrpt       124739.937          ops/s
c.g.f.j.stream.Deserialization.nanojson               thrpt        70288.407          ops/s
c.g.f.j.stream.Deserialization.orgjson                thrpt       122757.657          ops/s
c.g.f.j.stream.Deserialization.purejson               thrpt        80420.513          ops/s
c.g.f.j.stream.Deserialization.tapestry               thrpt       208052.838          ops/s
c.g.f.j.stream.Deserialization.underscore_java        thrpt       162940.009          ops/s
